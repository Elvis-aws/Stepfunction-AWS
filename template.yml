Transform: AWS::Serverless-2016-10-31
AWSTemplateFormatVersion: "2010-09-09"
Description: State Machine


Resources:
##############################################
################# State Machine ##############
##############################################
  StateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      Definition:
        Comment: This is state machine
        StartAt: FirstState
        States:
          FirstState:
            Type: Task
            Resource: !GetAtt Function1.Arn
            Next: LastState
          LastState:
            Type: Task
            Resource: !GetAtt Function2.Arn
            End: true
      LoggingConfiguration:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt LogGroup.Arn
        IncludeExecutionData: true
        Level: ALL
      RoleArn: !GetAtt StateMachineRole.Arn
      StateMachineName: !Sub ${AWS::StackName}-statemachine
      StateMachineType: STANDARD
##############################################
################## Log Group #################
##############################################
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub ${AWS::StackName}-statemachine-log-group
##############################################
############# State Machine Role #############
##############################################
  StateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - states.amazonaws.com
      Policies:
        - PolicyName: !Sub ${AWS::StackName}-invoke-task-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - !GetAtt Function1.Arn
                  - !GetAtt Function2.Arn
        - PolicyName: !Sub ${AWS::StackName}-cloud-watch-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogDelivery
                  - logs:GetLogDelivery
                  - logs:UpdateLogDelivery
                  - logs:DeleteLogDelivery
                  - logs:ListLogDeliveries
                  - logs:PutLogEvents
                  - logs:PutResourcePolicy
                  - logs:DescribeResourcePolicies
                  - logs:DescribeLogGroups
                Resource: "*"
##############################################
################## Event Rule 1 ##############
##############################################
  Rule1:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub ${AWS::StackName}-rule1
      ScheduleExpression: rate(5 minutes)
      State: ENABLED
      Targets:
        - Arn: !GetAtt StateMachine.Arn
          Id: !GetAtt StateMachine.Name
          RoleArn: !GetAtt EventsRuleRole.Arn
##############################################
############### Event Rule Role ##############
##############################################
  EventsRuleRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: events.amazonaws.com
      Policies:
        - PolicyName: !Sub ${AWS::StackName}-statemachineexecutionpolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: states:StartExecution
                Resource: !GetAtt StateMachine.Arn
##############################################
############# Lambda Function 1 ##############
##############################################
  Function1:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-function1
      CodeUri: app/
      Handler: current_datetime.lambda_handler
      Runtime: python3.9
      MemorySize: 128
      Role: !GetAtt FunctionRole.Arn
##############################################
############# Lambda Function 2 ##############
##############################################
  Function2:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-function2
      CodeUri: app/
      Handler: unix_datetime.lambda_handler
      Runtime: python3.9
      MemorySize: 128
      Role: !GetAtt FunctionRole.Arn
##############################################
############ Lambda Function Role ############
##############################################
  FunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

Outputs:
  StateMachineName:
    Description: "Activity State machine Name"
    Value: !GetAtt StateMachine.Name
